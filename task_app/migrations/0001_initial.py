# Generated by Django 4.1.7 on 2023-03-20 09:37

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProjectList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Тема проекта"
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание проекта")),
                (
                    "created",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 3, 20, 9, 37, 13, 281959),
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "completed",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Дата выполнения",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="author_project",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор проекта",
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="user_project",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Исполнитель проекта",
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
        ),
        migrations.CreateModel(
            name="Sprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Название спринта"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 3, 20, 9, 37, 13, 283957),
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "deadline",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 4, 3, 9, 37, 13, 283957),
                        verbose_name="Контрольный срок",
                    ),
                ),
                (
                    "completed",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Дата выполнения",
                    ),
                ),
                (
                    "sprint_status",
                    models.BooleanField(default=False, verbose_name="Статус"),
                ),
                (
                    "project_list",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sprint_project",
                        to="task_app.projectlist",
                        verbose_name="Проект",
                    ),
                ),
            ],
            options={
                "ordering": ["deadline"],
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=50, verbose_name="Статус"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Тема задачи"
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание задачи")),
                (
                    "created",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 3, 20, 9, 37, 13, 284956),
                        verbose_name="Дата/время создания",
                    ),
                ),
                (
                    "deadline",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 4, 3, 9, 37, 13, 284956),
                        verbose_name="Контрольный срок",
                    ),
                ),
                (
                    "completed",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Дата/время выполнения",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="author_task",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор задачи",
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="user_task",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Исполнитель задачи",
                    ),
                ),
                (
                    "sprint",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_sprint",
                        to="task_app.sprint",
                        verbose_name="Спринт",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="task_app.status",
                        verbose_name="Статус",
                    ),
                ),
            ],
            options={
                "ordering": ["deadline"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalTaskList",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="Тема задачи"
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание задачи")),
                (
                    "created",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 3, 20, 9, 37, 13, 284956),
                        verbose_name="Дата/время создания",
                    ),
                ),
                (
                    "deadline",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 4, 3, 9, 37, 13, 284956),
                        verbose_name="Контрольный срок",
                    ),
                ),
                (
                    "completed",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Дата/время выполнения",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор задачи",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Исполнитель задачи",
                    ),
                ),
                (
                    "sprint",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="task_app.sprint",
                        verbose_name="Спринт",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="task_app.status",
                        verbose_name="Статус",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical task list",
                "verbose_name_plural": "historical task lists",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStatus",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=50, verbose_name="Статус"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical status",
                "verbose_name_plural": "historical statuss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSprint",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Название спринта"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 3, 20, 9, 37, 13, 283957),
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "deadline",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 4, 3, 9, 37, 13, 283957),
                        verbose_name="Контрольный срок",
                    ),
                ),
                (
                    "completed",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Дата выполнения",
                    ),
                ),
                (
                    "sprint_status",
                    models.BooleanField(default=False, verbose_name="Статус"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project_list",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="task_app.projectlist",
                        verbose_name="Проект",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical sprint",
                "verbose_name_plural": "historical sprints",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalProjectList",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="Тема проекта"
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание проекта")),
                (
                    "created",
                    models.DateTimeField(
                        default=datetime.datetime(2023, 3, 20, 9, 37, 13, 281959),
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "completed",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Дата выполнения",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор проекта",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "performer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Исполнитель проекта",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical project list",
                "verbose_name_plural": "historical project lists",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
